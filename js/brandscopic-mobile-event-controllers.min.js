var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,PermissionsHandler,$location,ObjectsExtender){function setPage(page){$scope.page=page,searchFilters.page=page}var searchFilters={start_date:(new Date).getMonth()+1+"/"+(new Date).getDate()+"/"+(new Date).getFullYear(),end_date:"12/31/"+((new Date).getFullYear()+10),"campaign[]":null,"place[]":null,"area[]":null,"user[]":null,"team[]":null,"brand[]":null,"brand_portfolio[]":null,"status[]":null,"event_status[]":null,page:null};UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{selectedMenu:"eventsNavBar",title:"Events",hasMagnifierIcon:!0,hasAddIcon:UserService.permissionIsValid("events_create"),AddIconState:"home.events.add"}),$scope.showEvents=!1,$scope.loading=!0,$scope.loadedEvents=!1;var today=(new Date).getMonth()+1+"/"+(new Date).getDate()+"/"+(new Date).getFullYear(),future="12/31/"+((new Date).getFullYear()+10),credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,start_date:today,end_date:future,"status[]":"Active",page:1},options={force:!0},isLoadingEvents=!0,actions={success:function(events,filters,page){var evt=[];isLoadingEvents=!1,$scope.loading=!1;for(var i=0,len=events.length;len>i;i++)"Active"==events[i].status&&evt.push(events[i]);if($scope.eventsItems=evt,$scope.filters=filters,$scope.eventsItems.length&&($scope.showEvents=!0),setPage(null!=page?page:0),$stateParams.filter){var filter=$stateParams.filter,capitalizedFilterName=filter.charAt(0).toUpperCase()+filter.slice(1);$scope.filterStatus(capitalizedFilterName,!0)}$scope.loadedEvents=!0},error:function(){isLoadingEvents=!1}};$scope.filter="",$scope.event_status=!1,isLoadingEvents=!0,$scope.$on("ALL_EVENT",function(event,param){if(!param)try{searchFilters["campaign[]"]=null,searchFilters["brand[]"]=null,searchFilters["brand_portfolio[]"]=null,searchFilters["place[]"]=null,searchFilters["user[]"]=null,searchFilters["venue[]"]=null,isLoadingEvents=!0,Event.all(credentials,actions,options)}catch(error){throw isLoadingEvents=!1,error}}),$scope.filterStatus=function(status,shouldCleanList){$stateParams.filter=status,$scope.event_status=status,searchFilters["event_status[]"]=status!==!1?[status]:null,shouldCleanList&&setPage(1);var credentials=((new Date).getMonth()+1+"/"+(new Date).getDate()+"/"+(new Date).getFullYear(),"12/31/"+((new Date).getFullYear()+10),{company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,page:$scope.page,"status[]":"Active"}),options={force:!0},actions={success:function(events,filters,page){isLoadingEvents=!1,shouldCleanList&&($scope.eventsItems=[]),angular.forEach(events,function(value){$scope.eventsItems.push(value)}),$scope.filters=filters,setPage(null!=page?page:1)},error:function(){isLoadingEvents=!1}};isLoadingEvents=!0,ObjectsExtender.extendNotNull(credentials,searchFilters);try{Event.all(credentials,actions,options)}catch(error){throw isLoadingEvents=!1,error}},$scope.nextPage=function(){console.log("Loading next page"),setPage(Number($scope.page)+1),$scope.filterStatus($scope.event_status)},$scope.deleteEvent=function(deletedEvent){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:deletedEvent.id},actions={success:function(event){$scope.event=event;for(var evt=[],i=0,len=$scope.eventsItems.length;len>i;i++)"Active"==$scope.eventsItems[i].status&&$scope.eventsItems[i].id!=event.id&&evt.push($scope.eventsItems[i]);$scope.eventsItems=evt,$state.go("home.events")},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}};deletedEvent.active=!1,Event.update(credentials,actions,deletedEvent)},$scope.isLoadingEvents=function(){return console.log("Loading events: "+isLoadingEvents),isLoadingEvents},$scope.getObservableProperties=function(){return["eventsItems"]},$scope.handleFilterClicked=function(filter){$scope.event_status===filter&&(filter=!1),searchFilters["event_status[]"]=filter!==!1?[filter]:null,$scope.filterStatus(filter,!0)},$scope.$emit("SEARCH_DIRECTIVE","events"),$scope.$on("RESULT_SEARCH",function(event,filter){if($scope.filter=filter,setPage(1),searchFilters["campaign[]"]=null,searchFilters["brand[]"]=null,searchFilters["brand_portfolio[]"]=null,searchFilters["place[]"]=null,searchFilters["user[]"]=null,searchFilters["venue[]"]=null,""!==filter||void 0!==filter){switch(filter.type){case scopic.consts.events_typeahead_categories.CAMPAIGN:searchFilters["campaign[]"]=[filter.id];break;case scopic.consts.events_typeahead_categories.BRAND:searchFilters["brand[]"]=[filter.id];break;case scopic.consts.events_typeahead_categories.BRAND2:searchFilters["brand_portfolio[]"]=[filter.id];break;case scopic.consts.events_typeahead_categories.PLACE:searchFilters["place[]"]=[filter.id];break;case scopic.consts.events_typeahead_categories.USER:searchFilters["user[]"]=[filter.id];break;case scopic.consts.events_typeahead_categories.VENUE:searchFilters["venue[]"]=[filter.id]}searchFilters.start_date=(new Date).getMonth()+1+"/"+(new Date).getDate()+"/"+(new Date).getFullYear(),searchFilters.end_date=(new Date).getMonth()+1+"/"+(new Date).getDate()+"/"+((new Date).getFullYear()+900),$scope.filterStatus($scope.event_status,!0)}$scope.$apply()}),PermissionsHandler.handlePermissions(["events"]),null!=$stateParams.filter&&(searchFilters["event_status[]"]=[$stateParams.filter]),Event.all(credentials,actions,options)};module.controller("eventsCtrl",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","PermissionsHandler","$location","ObjectsExtender"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event,Campaign,Venue,debounce){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Event",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,showEventSubNav:!0});var current=new Date,startOffsetMinutes=15,endOffsetMinutes=60,now=new Date(current.getTime()+6e4*startOffsetMinutes),future=new Date(now.getTime()+6e4*endOffsetMinutes),startDate=now.getFullYear()+"-"+("0"+(now.getMonth()+1)).slice(-2)+"-"+("0"+now.getDate()).slice(-2),startTime=("0"+now.getHours()).slice(-2)+":"+("0"+now.getMinutes()).slice(-2)+":00",endDate=future.getFullYear()+"-"+("0"+(future.getMonth()+1)).slice(-2)+"-"+("0"+future.getDate()).slice(-2),endTime=("0"+future.getHours()).slice(-2)+":"+("0"+future.getMinutes()).slice(-2)+":00";$scope.event={start_date:startDate,start_time:startTime,end_date:endDate,end_time:endTime},$scope.campaigns={},$scope.campaingsDrop=[];var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token},actions={success:function(campaigns){UserInterface.update($scope.UserInterface,{actionSave:"createEvent("+$scope.event+")"}),angular.forEach(campaigns,function(value){$scope.campaingsDrop.push({id:value.id,name:value.name})})}};Campaign.all(credentials,actions),$scope.createEvent=function(){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token},actions={success:function(event){$scope.event=event,$location.path("/home/events/"+event.id+"/about")},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}},sm1=$scope.event.start_date?$scope.event.start_date.indexOf("-"):0,sm2=$scope.event.start_date?$scope.event.start_date.indexOf("/"):0,em1=$scope.event.end_date?$scope.event.end_date.indexOf("-"):0,em2=$scope.event.end_date?$scope.event.end_date.indexOf("/"):0;4==sm1&&($scope.event.start_date=$scope.event.start_date.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/,"$2/$3/$1")),4==sm2&&($scope.event.start_date=$scope.event.start_date.replace(/^(\d{4})\/(\d{2})\/(\d{2}).*$/,"$2/$3/$1")),4==em1&&($scope.event.end_date=$scope.event.end_date.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/,"$2/$3/$1")),4==em2&&($scope.event.end_date=$scope.event.end_date.replace(/^(\d{4})\/(\d{2})\/(\d{2}).*$/,"$2/$3/$1")),Event.create(credentials,actions,$scope.event)};var _getSearch=function(value){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,term:value},actions={success:function(items){$scope.itemsToShowPlaces=[],angular.forEach(items,function(item){$scope.itemsToShowPlaces.push({label:item.label,id:item.id})})},error:function(event_error){$scope.event_error=event_error}};Venue.search(credentials,actions)};$scope.$watch("place_reference",function(value){value&&($scope.event.place_reference=value.id),getDebouncedPlaces(value)});var getDebouncedPlaces=debounce(function(value){_getSearch(value)})};module.controller("eventsAddCtrl",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event","Campaign","Venue","debounce"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,Photos,photosService,UploadedPhotosTracker){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,showEventSubNav:!0,eventSubNav:"photos"});var totalRetrievedPhotos;$scope.loading=!0,$scope.photosBeingProcessedCount=0,$scope.photosList={},$scope.photoForm={key:"",AWSAccessKeyId:"",policy:"",signature:""};var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Photos",hasAddPhoto:Event.can("upload photos")})}};$scope.customPermissionsHandler=function(){UserInterface.update($scope.UserInterface,{hasAddPhoto:UserService.permissionIsValid("events_create_photos")})},Event.find(credentials,actions),$scope.$on("createPhoto",function(e,data){data.render?($scope.loading=!1,$scope.hasPhotos=!0,$scope.photos.unshift({file_medium:data.src}),$scope.uploading=!0):(Photos.create(credentials,actions,data),$scope.uploading=!1,UploadedPhotosTracker.addUploadedPhotos($stateParams.eventId,1)),$scope.$apply()}),photosService.getPhotosList().then(function(response){$scope.photos=response.results,$scope.photosCount=response.results.length,totalRetrievedPhotos=response.total;try{null==UploadedPhotosTracker.getExpectedPhotosAmount($stateParams.eventId)&&UploadedPhotosTracker.addUploadedPhotos($stateParams.eventId,response.total),$scope.photosBeingProcessedCount=UploadedPhotosTracker.getExpectedPhotosAmount($stateParams.eventId)-totalRetrievedPhotos,console.log("Expected amount: "+exepectedAmount)}catch(error){}$scope.hasPhotos=response.results.length&&response.results.length>0?!0:!1,$scope.loading=!1}),$scope.uploading=!1,$scope.isUploading=function(){return uploading},window.uploadNow.bind({auth_token:UserService.currentUser.auth_token,company_id:CompanyService.getCompanyId(),event_id:$stateParams.eventId,url:"http://stage.brandscopic.com/api/v1/events/"+$stateParams.eventId+"/photos/form.json?"})};module.controller("eventsPhotosCtrl",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","Photos","photosService","UploadedPhotosTracker"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,Photos,photosService){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasCloseIcon:!0,showEventSubNav:!1,hasCustomHomeClass:!0,CloseState:"home.events.details.photos",eventSubNav:"photos"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,$scope.direction="left",$scope.currentIndex=$stateParams.index||0,$scope.setCurrentSlideIndex=function(index){$scope.direction=index>$scope.currentIndex?"left":"right",$scope.currentIndex=index},$scope.isCurrentSlideIndex=function(index){return Number($scope.currentIndex)===index},$scope.prevSlide=function(){$scope.direction="left",$scope.currentIndex=$scope.currentIndex<$scope.photos.length-1?++$scope.currentIndex:0},$scope.nextSlide=function(){$scope.direction="right",$scope.currentIndex=$scope.currentIndex>0?--$scope.currentIndex:$scope.photos.length-1}}};photosService.getPhotosList().then(function(response){$scope.photos=response.results,$scope.photosCount=response.results.length}),Event.find(credentials,actions)};module.controller("EventsPhotoSliderController",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","Photos","photosService"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$window,$state,$stateParams,$sce,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,showEventSubNav:!0,eventSubNav:"about",title:UserInterface.title});var makeAlert=function(event){var today=(new Date).getMonth()+1+"/"+(new Date).getDate()+"/"+(new Date).getFullYear(),alert={message:"",style:"",show:!1};if(event.start_date>today&&(alert={message:$sce.trustAsHtml("Your event is scheduled. You can manage the event team, complete tasks, upload event documents."),style:"box-container scheduled",show:!0}),event.tasks_late_count>0&&(alert={message:$sce.trustAsHtml("Your event has "+event.tasks_late_count+" late tasks. Click here to complete."),style:"box-container late",show:!0}),event.tasks_due_today_count>0&&(alert={message:$sce.trustAsHtml("Your event has "+event.tasks_due_today_count+" tasks that are due today. Click here to complete."),style:"box-container scheduled",show:!0}),"Due"==event.event_status){for(var item,links=" Please ",i=0;item=event.actions[i++];)"enter post event data"==item&&(links=links+"<a href='#/home/events/"+event.id+"/data'>enter post event data</a>, "),"upload photos"==item&&(links=links+"<a href='#/home/events/"+event.id+"/photos'>upload photos</a>, "),"conduct surveys"==item&&(links=links+"<a href='#/home/events/"+event.id+"/surveys'>conduct surveys</a>, "),"enter expenses"==item&&(links=links+"<a href='#/home/events/"+event.id+"/expenses'>enter expenses</a>, "),"gather comments"==item&&(links=links+" and <a href='#/home/events/"+event.id+"/comments'>gather comments</a>");links+=' from your audience during or shortly after the event. Once complete please <a ng-click="submitEvent()">submit</a> your post event form.',alert={message:$sce.trustAsHtml("Your post event report is due."+links),style:"box-container due",show:!0}}if("Late"==event.event_status){for(var item,links=" Please ",i=0;item=event.actions[i++];)"enter post event data"==item&&(links=links+"<a href='#/home/events/"+event.id+"/data'>enter post event data</a>, "),"upload photos"==item&&(links=links+"<a href='#/home/events/"+event.id+"/photos'>upload photos</a>, "),"conduct surveys"==item&&(links=links+"<a href='#/home/events/"+event.id+"/surveys'>conduct surveys</a>, "),"enter expenses"==item&&(links=links+"<a href='#/home/events/"+event.id+"/expenses'>enter expenses</a>, "),"gather comments"==item&&(links=links+" and <a href='#/home/events/"+event.id+"/comments'>gather comments now</a>");links+=" from your audience during or shortly after the event. Once complete please submit your post event form.",alert={message:$sce.trustAsHtml("Your post event report is late."+links),style:"box-container late",show:!0}}return"Approved"==event.event_status&&(alert={message:$sce.trustAsHtml("Your post event report has been approved."),style:"box-container approved",show:!0}),"Rejected"==event.event_status&&(alert={message:$sce.trustAsHtml("Your post event report form has been rejected for the following reasons: Rejection reason here. Please make the necessary changes and resubmit."),style:"box-container rejected",show:!0}),"Submitted"==event.event_status&&(alert={message:$sce.trustAsHtml('Your post event report has been submitted for approval. Please review and either <a ng-click="approveEvent()">approve</a> or <a ng-click="rejectEvent()">reject</a>.'),style:"box-container submitted",show:!0}),alert},ui={},credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.alert=makeAlert(event),ui.title=event.campaign?event.campaign.name:"Event",UserInterface.update($scope.UserInterface,ui),$scope.eventId=$stateParams.eventId,$scope.editUrl="#home/events/"+$stateParams.eventId+"/edit"}};$scope.map_styles=[{stylers:[{hue:"#00ffe6"},{saturation:-100},{gamma:.8}]},{featureType:"road",elementType:"geometry",stylers:[{lightness:100},{visibility:"simplified"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#BABABA"}]}],$scope.deleteEvent=function(){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$state.go("home.events")},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}};$scope.event.active=!1,$scope.goBack=function(){$state.go("home.events")},Event.update(credentials,actions,$scope.event)},$scope.openMap=function(){$state.go("home.events.details.map")},$scope.editEvent=function(){$state.go("home.events.details.edit")},$scope.approveEvent=function(){Event.approve(credentials,{success:function(){$scope.alert.message="Your post event report has been approved.",$scope.alert.style="box-container approved"},error:function(){$scope.alert.message="Your event could not be approved.",$scope.alert.style="box-container rejected"}})},$scope.rejectEvent=function(){var rejectionReason=$window.prompt("Why is the event rejected?");null!==rejectionReason&&Event.reject(credentials,rejectionReason,{success:function(){$scope.alert.message="Your post event report has been rejected.",$scope.alert.style="box-container approved"},error:function(){$scope.alert.message="Your event could not be rejected.",$scope.alert.style="box-container rejected"}})},$scope.submitEvent=function(){Event.submit(credentials,{success:function(){$scope.alert.message="Your post event report has been submitted.",$scope.alert.style="box-container approved"},error:function(){$scope.alert.message="Your event could not be submitted.",$scope.alert.style="box-container rejected"}})},Event.find(credentials,actions,{force:!0})};module.controller("EventsAboutController",controller).$inject=["$scope","$window","$state","$stateParams","$sce","snapRemote","UserService","CompanyService","UserInterface","Event"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$window,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasDeleteIcon:!0,eventSubNav:"about",title:UserInterface.title});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,UserInterface.update($scope.UserInterface,{title:event.campaign.name}),$scope.eventId=$stateParams.eventId,$scope.editUrl="#home/events/"+$stateParams.eventId+"/edit"}};Event.find(credentials,actions),$scope.map_styles=[{stylers:[{hue:"#00ffe6"},{saturation:-100},{gamma:.8}]},{featureType:"road",elementType:"geometry",stylers:[{lightness:100},{visibility:"simplified"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#BABABA"}]}]};module.controller("EventsAboutMapController",controller).$inject=["$scope","$window","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Event"}),angular.extend(UserInterface,Event.getAllowedActions()),$scope.eventId=$stateParams.eventId}};$scope.handleBarClick=function(destinationState){var destination="home.events.details."+destinationState;$state.go(destination)},Event.find(credentials,actions)};module.controller("EventsDetailsController",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","PermissionsHandler"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event,Campaign,PermissionsHandler){UserInterface.closeMenuIfLogged(),UserInterface.update($scope.UserInterface,{hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,title:UserInterface.title});var parseDateToHtml5=function(dateString){var sm1=dateString.indexOf("-"),sm2=dateString.indexOf("/"),result="";return 2==sm1&&(result=dateString.replace(/^(\d{2})\-(\d{2})\-(\d{4}).*$/,"$3-$1-$2")),2==sm2&&(result=dateString.replace(/^(\d{2})\/(\d{2})\/(\d{4}).*$/,"$3-$1-$2")),result},parseHtml5DateToMMDDYYYY=function(dateString){var sm1=dateString.indexOf("-"),sm2=dateString.indexOf("/"),result="";return 4==sm1&&(result=dateString.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/,"$2/$3/$1")),4==sm2&&(result=dateString.replace(/^(\d{4})\/(\d{2})\/(\d{2}).*$/,"$2/$3/$1")),result},parseTimeToHtml5=function(timeString){var hours=Number(timeString.match(/^(\d+)/)[1]),minutes=Number(timeString.match(/:(\d+)/)[1]),AMPM=timeString.match(/\s(.*)$/)[1],sHours="",sMinutes="";return"PM"==AMPM&&12>hours&&(hours+=12),"AM"==AMPM&&12==hours&&(hours-=12),sHours=hours.toString(),sMinutes=minutes.toString(),10>hours&&(sHours="0"+sHours),10>minutes&&(sMinutes="0"+sMinutes),sHours+":"+sMinutes+":00"};$scope.event={};var ui={actionSave:"updateEvent("+$scope.event+")"},credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){event.start_date=parseDateToHtml5(event.start_date),event.end_date=parseDateToHtml5(event.end_date),event.start_time=parseTimeToHtml5(event.start_time),event.end_time=parseTimeToHtml5(event.end_time),$scope.event=event;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token},actions={success:function(campaigns){$scope.campaigns=campaigns,ui.title=event.campaign?event.campaign.name:"Event",UserInterface.update($scope.UserInterface,ui),$scope.eventId=$stateParams.eventId,$scope.editUrl="#/home/events/"+$stateParams.eventId+"/edit"}};Campaign.all(credentials,actions)}};$scope.updateEvent=function(){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$state.go("home.events")},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}};$scope.event.start_date=parseHtml5DateToMMDDYYYY($scope.event.start_date),$scope.event.end_date=parseHtml5DateToMMDDYYYY($scope.event.end_date),$scope.event.campaign_id=$scope.event.campaign.id?$scope.event.campaign.id:0,Event.update(credentials,actions,$scope.event)},PermissionsHandler.handlePermissions(["events_edit"]),Event.find(credentials,actions)};module.controller("EventsEditController",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event","Campaign","PermissionsHandler"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event,EventContact,EventTeam){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,hasAddIcon:!0,eventSubNav:"people",title:UserInterface.title}),$scope.gotToState=function(newState){$state.go(newState)},$scope.deleteTeam=function(teamId,teamType){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,memberable_id:teamId,memberable_type:teamType},actions={success:function(){for(var item,i=0;item=$scope.eventTeamItems[i++];)item.id==teamId&&$scope.eventTeamItems.splice(i-1,1)},error:function(team_error){$scope.team_error=team_error,console.log(team_error)}};EventTeam.delete(credentials,actions,$scope.event)},$scope.deleteContact=function(contactId,contactType){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,contactable_id:contactId,contactable_type:contactType},actions={success:function(){for(var item,i=0;item=$scope.eventContactItems[i++];)item.id==contactId&&$scope.eventContactItems.splice(i-1,1)},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}};EventContact.delete(credentials,actions,$scope.event)},$scope.showEventTeam=!0,$scope.showEventContact=!0,$scope.loading=!0;var credentials=(UserService.currentUser.auth_token,CompanyService.getCompanyId(),$stateParams.eventId,{company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId}),actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"People"}),$stateParams.show&&"contacts"===$stateParams.show?($scope.showPeople="contacts",$scope.UserInterface.AddIconState="home.events.details.people.contacts.add",$location.url($location.path())):($scope.showPeople="team",$scope.UserInterface.AddIconState="home.events.details.people.team.add"),$scope.showPeopleType=function(type){$scope.showPeople=type,$scope.loading=!0,"team"==$scope.showPeople&&($scope.showEventTeam=!1,$scope.UserInterface.AddIconState="home.events.details.people.team.add",EventTeam.all(credentials,actionsTeam,options),$scope.loading=!1),"contacts"==$scope.showPeople&&($scope.showEventContact=!1,$scope.UserInterface.AddIconState="home.events.details.people.contacts.add",EventContact.all(credentials,actionsContact,options),$scope.loading=!1)};var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actionsTeam={success:function(eventTeam){$scope.eventTeamItems=eventTeam,$scope.loading=!1,$scope.showEventTeam=!0},error:function(){$scope.loading=!1,$scope.showEventTeam=!1}},actionsContact={success:function(eventContact){$scope.eventContactItems=eventContact,$scope.loading=!1,$scope.showEventContact=!0},error:function(){$scope.loading=!1,$scope.showEventContact=!1}},options={force:!0};EventTeam.all(credentials,actionsTeam,options),EventContact.all(credentials,actionsContact,options)}};$scope.customPermissionsHandler=function(){UserInterface.update($scope.UserInterface,{hasAddIcon:UserService.permissionIsValid("events_add_contacts")}),UserService.permissionIsValid("events_contacts")&&!UserService.permissionIsValid("events_team_members")?$scope.showPeople="contacts":!UserService.permissionIsValid("events_contacts")&&UserService.permissionIsValid("events_team_members")&&($scope.showPeople="team")},$scope.getObservableProperties=function(){return["eventTeamItems","eventContactItems"]},Event.find(credentials,actions)};module.controller("EventsPeopleController",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event","EventContact","EventTeam"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,EventContact){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Contact info",hasMenuIcon:!1,hasBackIcon:!0,showEventSubNav:!1,eventSubNav:"people",EditIconUrl:"#/home/events/"+$stateParams.eventId+"/people/contacts/"+$stateParams.contactId+"/edit"}),$scope.goBack=function(){$state.go("home.events")};var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,$scope.contactId=$stateParams.contactId,$scope.contact=[];var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},options={force:!0},actions={success:function(contacts){for(var item,i=0;item=contacts[i++];)if(item.id==$stateParams.contactId){$scope.contact=item,UserInterface.update($scope.UserInterface,{hasEditIcon:"contact"==item.type?!0:!1});break}if(0==$scope.contact.length){var assignableCredentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},options={force:!0},assignableActions={success:function(assignableContacts){for(var item,i=0;item=assignableContacts[i++];)if(item.id==$stateParams.contactId){$scope.contact=item,UserInterface.update($scope.UserInterface,{hasEditIcon:!1});break}}};EventContact.contacts(assignableCredentials,assignableActions,options)}}};EventContact.all(credentials,actions,options)}};Event.find(credentials,actions)};module.controller("EventsPeopleContactsController",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","EventContact"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$location,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,EventContact,Contact){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Contacts",hasMenuIcon:!1,hasDeleteIcon:!0,hasAddIcon:!0,showEventSubNav:!1,eventSubNav:"people",AddIconState:"home.events.details.people.contacts.new"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},options={force:!0},actions={success:function(contacts){for(var item,contactList=[],i=0;item=contacts[i++];)if("contact"==item.type){var credentialsContact={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,contact_id:item.id},actionsContact={success:function(contactFound){contactFound&&contactFound.last_name&&""!=contactFound.last_name&&contactFound.country&&""!=contactFound.country&&contactFound.state&&""!=contactFound.state&&contactFound.city&&""!=contactFound.city&&contactList.push({id:contactFound.id,full_name:contactFound.full_name,title:contactFound.title,type:"contact"})}};Contact.find(credentialsContact,actionsContact)}else contactList.push(item);$scope.contacts=contactList,$scope.eventId=$stateParams.eventId,$scope.assignContact=function(contactId,contactType){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,contactable_id:contactId,contactable_type:contactType},actions={success:function(){for(var item,i=0;item=$scope.contacts[i++];)item.id==contactId&&$scope.contacts.splice(i-1,1);
$location.path("/home/events/"+$scope.event.id+"/people/contacts/add")},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}};EventContact.create(credentials,actions,$scope.event)}}};EventContact.contacts(credentials,actions,options)}};Event.find(credentials,actions),$scope.searchContacts=function(contactName){var credentials=contactName&&contactName.length>1?{company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,term:contactName}:{company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},options={force:!0},actions={success:function(contacts){for(var item,contactList=[],i=0;item=contacts[i++];)if("contact"==item.type){var credentialsContact={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,contact_id:item.id},actionsContact={success:function(contactFound){contactFound&&contactFound.last_name&&""!=contactFound.last_name&&contactFound.country&&""!=contactFound.country&&contactFound.state&&""!=contactFound.state&&contactFound.city&&""!=contactFound.city&&contactList.push({id:contactFound.id,full_name:contactFound.full_name,title:contactFound.title,type:"contact"})}};Contact.find(credentialsContact,actionsContact)}else contactList.push(item);$scope.contacts=contactList}};EventContact.contacts(credentials,actions,options)}};module.controller("EventsPeopleContactsAddController",controller).$inject=["$scope","$state","$location","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","EventContact","Contact"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$location,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,EventContact,Contact,Country){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Edit contact",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0}),$scope.getCountries=function(actions){var credentials={auth_token:UserService.currentUser.auth_token};null===actions&&(actions={success:function(countries){$scope.countries=countries}}),Country.all(credentials,actions)},$scope.countryHasChanged=function(){$scope.contact.country=$scope.selectedCountry.name,$scope.getStatesForCountry($scope.selectedCountry.id)},$scope.getStates=function(countryId){var credentials={auth_token:UserService.currentUser.auth_token,country_id:countryId},actions={success:function(states){$scope.states=states}};Country.states(credentials,actions)},$scope.getStatesForCountry=function(){$scope.getStates($scope.selectedCountry.id)};var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,$scope.contactId=$stateParams.contactId,$scope.contact=[],$scope.countries=[],$scope.states=[],$scope.selectedCountry={id:"",name:""};var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(contacts){for(var item,i=0;item=contacts[i++];)if(item.id==$stateParams.contactId){$scope.contact=item;break}if(!$scope.contact.id){var assignableActions={success:function(assignableContacts){for(var item,i=0;item=assignableContacts[i++];)if(item.id==$stateParams.contactId){$scope.contact=item;break}}};EventContact.contacts(credentials,assignableActions)}$scope.contact.id&&$scope.getCountries({success:function(countries){$scope.countries=countries;for(var item,i=0;item=countries[i++];)if(item.name==$scope.contact.country){$scope.selectedCountry=item;break}$scope.getStates($scope.selectedCountry.id)}})}};EventContact.all(credentials,actions)}};Event.find(credentials,actions),$scope.updateContact=function(){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,contact_id:$stateParams.contactId},actions={success:function(contact){$scope.contact=contact,$location.path("/home/events/"+$scope.event.id+"/people")},error:function(contact_error){$scope.contact_error=contact_error}};$scope.contact.country=$scope.selectedCountry.id,Contact.update(credentials,actions,$scope.contact)}};module.controller("EventsPeopleContactsEditController",controller).$inject=["$scope","$state","$location","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","EventContact","Contact","Country"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$location,$stateParams,$timeout,snapRemote,UserService,CompanyService,UserInterface,Event,Contact,Country,EventContact){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Contact",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,showEventSubNav:!1}),$scope.contact={},$scope.contact_error=void 0,$scope.countries=[],$scope.states=[],$scope.countryCode="US",$scope.getCountries=function(){var credentials={auth_token:UserService.currentUser.auth_token},actions={success:function(countries){$scope.countries=countries}};Country.all(credentials,actions)},$scope.getStates=function(countryId){var credentials={auth_token:UserService.currentUser.auth_token,country_id:countryId},actions={success:function(states){$scope.states=states}};Country.states(credentials,actions)},$scope.getStatesForCountry=function(){var countryCode=$scope.contact.country;$scope.getStates(countryCode)},$scope.getCountries();({company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId});$scope.createContact=function(){var foundContact={},credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token},actions={success:function(contact){$scope.contact=contact;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,term:contact.full_name},options={force:!0},actions={success:function(assignableContacts){foundContact=contact,foundContact.type="contact";for(var item,i=0;item=assignableContacts[i++];)if(contact.id==item.id){foundContact=item;break}var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,contactable_id:foundContact.id,contactable_type:foundContact.type},actions={success:function(){$state.go("home.events.details.people",{eventId:$scope.event.id,show:"contacts"},{location:!1})},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}};EventContact.create(credentials,actions,$scope.event)}};$timeout(EventContact.contacts(credentials,actions,options),3e3)},error:function(contact_error){$scope.contact_error=contact_error}};Contact.create(credentials,actions,$scope.contact)}};module.controller("EventsPeopleContactsNewController",controller).$inject=["$scope","$state","$location","$stateParams","$timeout","snapRemote","UserService","CompanyService","UserInterface","Event","Contact","Country","EventContact"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$location,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,EventTeam){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Event team",hasMenuIcon:!1,hasDeleteIcon:!0,showEventSubNav:!1,eventSubNav:"people"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(teams){$scope.teams=teams,$scope.assignTeam=function(teamId,teamType){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId,memberable_id:teamId,memberable_type:teamType},actions={success:function(){for(var item,i=0;item=$scope.teams[i++];)item.id==teamId&&$scope.teams.splice(i-1,1);$location.path("/home/events/"+$scope.event.id+"/people/team/add")},error:function(team_error){$scope.team_error=team_error,console.log(team_error)}};EventTeam.create(credentials,actions,$scope.event)}}};EventTeam.members(credentials,actions)}};Event.find(credentials,actions)};module.controller("EventsPeopleTeamAddController",controller).$inject=["$scope","$state","$location","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","EventTeam"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,hasSaveIcon:!0,eventSubNav:"data"});var credentials=(UserService.currentUser.auth_token,CompanyService.getCompanyId(),$stateParams.eventId,{company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId}),actions={success:function(event){$scope.event=event;var edit=$stateParams.edit?$stateParams.edit:!1;1!=$scope.event.have_data||edit||$location.path("/home/events/"+event.id+"/data/view"),UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Data"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(results){$scope.eventResultsItems=results,$scope.showConsumer=!1,$scope.showDemographics=!1,$scope.showCustom=!1;for(var result,i=0;result=results[i++];)$scope.showConsumer="consumer_reach"==result.module?!0:$scope.showConsumer,$scope.showDemographics="demographics"==result.module?!0:$scope.showDemographics,$scope.showCustom="custom"==result.module?!0:$scope.showCustom}};Event.results(credentials,actions)}};Event.find(credentials,actions),$scope.updateEventData=function(results){for(var result,credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$location.path("/home/events/"+event.id+"/data/view")},error:function(event_error){$scope.event_error=event_error,console.log(event_error)}},results_attributes=[],i=0;result=results[i++];)for(var field,j=0;field=result.fields[j++];){if("percentage"==field.field_type)for(var segment,k=0;segment=field.segments[k++];)null!==segment.value&&results_attributes.push({id:segment.id,value:segment.value});if("number"==field.field_type&&null!==field.value&&results_attributes.push({id:field.id,value:field.value}),"text"==field.field_type&&null!==field.value&&results_attributes.push({id:field.id,value:field.value}),"count"==field.field_type)if("checkbox"==field.options.capture_mechanism){for(var segment,segmentIds=[],k=0;segment=field.segments[k++];)segment.value&&segmentIds.push(segment.id);segmentIds.length>0&&results_attributes.push({id:field.id,value:segmentIds})}else results_attributes.push({id:field.id,value:field.value})}var data={event:{summary:$scope.event.summary,results_attributes:results_attributes}};Event.updateResults(credentials,actions,data)},$scope.isActive=!1,$scope.isMore=!1,$("#showMore").html("Show full summary <span> &#xe625;</span>"),$scope.showMoreText=function(){$scope.isActive=!$scope.isActive,$scope.isActive?($scope.isMore=!0,$("#showMore").html("Show full summary <span>&#xe625;")):($("#showMore").html("Show full summary <span>&#xe625;</span>"),$scope.isMore=!1)}};module.controller("EventsDataController",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,hasEditIcon:!0,showEventSubNav:!0,eventSubNav:"data",EditIconUrl:"#/home/events/"+$stateParams.eventId+"/data?edit"});var ethnicityNameMap=(UserService.currentUser.auth_token,CompanyService.getCompanyId(),$stateParams.eventId,{}),showLessText="Collapse summary <span> &#xe626; </span>",showMoreText="Show full summary <span> &#xe625; </span>",summaryIsCollapsed=!0,credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){event.summary="null"==event.summary?null:event.summary,event.data=event.data?event.data:{spent_by_impression:null,spent_by_interaction:null,spent_by_sample:null},event.data.spent_by_impression="NaN"==event.data.spent_by_impression?null:event.data.spent_by_impression,event.data.spent_by_interaction="NaN"==event.data.spent_by_interaction?null:event.data.spent_by_interaction,event.data.spent_by_sample="NaN"==event.data.spent_by_sample?null:event.data.spent_by_sample,$scope.event=event,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Data"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(results){for(var result,dataAgeCategories=[],dataAgeSource=[],gapAgeValue=[],progressBarData=[],ethnicData=[],male=0,female=0,customData=[],hasProgressBarData=!1,i=0;result=results[i++];){if("consumer_reach"==result.module)for(var field,j=0;field=result.fields[j++];)field.goal&&null!==field.goal&&(progressBarData.push({value:field.value,name:field.name,percentage:100*field.value/parseInt(field.goal)}),hasProgressBarData=field.value?!0:!1);if("demographics"==result.module)for(var field,j=0;field=result.fields[j++];){if("Gender"==field.name)for(var segment,k=0;segment=field.segments[k++];)"Male"==segment.text&&(male=segment.value),"Female"==segment.text&&(female=segment.value);if("Age"==field.name)for(var segment,showAge=!1,k=0;segment=field.segments[k++];)dataAgeCategories.push(segment.text),dataAgeSource.push(segment.value?segment.value:0),gapAgeValue.push(100-(segment.value?segment.value:0)),showAge=segment.value?!0:showAge;if("Ethnicity/Race"==field.name)for(var segment,item,showEthnicity=!1,alphabet="A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z".split(","),k=0;segment=field.segments[k++];)!function(index){item=[],item.push(segment.text),item.push(segment.value?segment.value:0);var value=alphabet[index-1];ethnicityNameMap[item[0]]=value,0!==item[1]&&(ethnicData.push(item),showEthnicity=segment.value?!0:showEthnicity)}(k)}if("custom"==result.module)for(var field,j=0;field=result.fields[j++];)if("percentage"==field.field_type&&customData.push({value:field.options.predefined_value,name:field.name,ordering:field.ordering}),"number"==field.field_type&&customData.push({value:field.value,name:field.name,ordering:field.ordering}),"text"==field.field_type&&customData.push({value:field.value,name:field.name,ordering:field.ordering}),"count"==field.field_type)if("checkbox"==field.options.capture_mechanism){var segmentValues="";if(field.value)for(var value,k=0;value=field.value[k++];)for(var segment,l=0;segment=field.segments[l++];)segment.id==value&&(segmentValues=segmentValues+segment.text+", ");""!=segmentValues&&(segmentValues=segmentValues.substring(0,segmentValues.lastIndexOf(", "))),customData.push({value:segmentValues,name:field.name,ordering:field.ordering})}else for(var segment,k=0;segment=field.segments[k++];)if(segment.id==field.value){customData.push({value:segment.text,name:field.name,ordering:field.ordering});break}}$scope.progressBarData=progressBarData,$scope.Male=male,$scope.Female=female,$scope.customData=customData,$scope.ageChart={plotOptions:{bar:{dataLabels:{enabled:!1}},series:{stacking:"percent",enableMouseTracking:!1,pointPadding:0,groupPadding:0,borderWidth:0,pointWidth:15,dataLabels:{color:"#3E9CCF",style:{fontSize:"11px",fontFamily:"'Lato', sans-serif;"}}}},options:{chart:{type:"bar",events:{redraw:function(){$.each(this.series[1].data,function(i,point){var labelDiv=$(point.dataLabel.div),labelLeft=labelDiv.offset().left,bar=$(point.graphic.element),chartRight=bar.offset().left+parseInt(bar.attr("height")),labelSpan=$(labelDiv).children()[0],labelHtml=$(labelSpan).html();chartRight>labelLeft&&"0"!==labelHtml?($(labelDiv).children().css("color","#FFFFFF"),$(labelDiv).children().css("line-height","16px")):($(labelDiv).children().css("color","#3E9CCF"),$(labelDiv).children().css("line-height","16px"))})}}},legend:{enabled:!1},plotOptions:{series:{stacking:"percent"}},tooltip:{enabled:!1}},series:[{data:gapAgeValue,id:"Serie1",name:"Fill in",color:"#DFDFDF"},{data:dataAgeSource,id:"Serie2",name:"Values",color:"#3E9CCF",dataLabels:{enabled:!0,color:"#3E9CCF",align:"right",x:30,y:-2,style:{color:"#3E9CCF",fontFamily:"'Lato', sans-serif;"},useHTML:!0}}],title:{text:""},xAxis:{currentMin:null,currentMax:null,categories:dataAgeCategories,title:{enabled:!1},labels:{style:{color:"#3E9CCF",fontSize:"12px",fontFamily:"'Lato', sans-serif;"}},tickLength:0,lineWidth:0},yAxis:{max:100,labels:{enabled:!1},title:{text:!1},gridLineColor:"transparent",enabled:!1},credits:{enabled:!1},loading:!1},$scope.ethnicityChart={options:{chart:{type:"pie",height:370},legend:{enabled:!0,useHTML:!0,symbolRadius:0,symbolWidth:8,symbolHeight:8,labelFormatter:function(){return 0!=this.y?"<div style=\"font-size:11px; text-transform: uppercase; display: inline-block; color: #3E9CCF; font-family:'Lato', sans-serif;\">"+this.name+"</div>":null},layout:"vertical",temMarginTop:10,itemMarginBottom:10,borderWidth:0},colors:["#B1E6F2","#90D6F0","#6DBCE7","#3E9CCF","#3881a8"],title:{text:null},credits:{enabled:!1},yAxis:{title:{text:null}},tooltip:{enabled:!1},plotOptions:{pie:{shadow:!1,showInLegend:!0},series:{enableMouseTracking:!1,dataLabels:{connectorColor:"#C0C0C0",softConnector:!1}}}},series:[{name:"Ethnicity",data:ethnicData,size:"100%",innerSize:"65%",distance:2,dataLabels:{enabled:!0,crop:!1,useHTML:!0,formatter:function(){return 0!=this.y?'<span style="font-size:12px;"><span style="font-weight:bold; font-family:\'Lato\', sans-serif;">'+this.y+"</span>%</span>":null},color:"#3E9CCF",distance:3,connectorWidth:0}}]},$scope.showSummary=event.summary&&event.summary.length>0||event.data.spent_by_impression||event.data.spent_by_interaction||event.data.spent_by_sample||customData.length>0||hasProgressBarData,$scope.showEthnicity=showEthnicity,$scope.showAge=showAge}};Event.results(credentials,actions)}};$scope.shouldShowMoreTextButton=function(text){return text?text.split(" ").length>100:!1},$scope.showMoreText=function(){summaryIsCollapsed?($("#showMore").html(showLessText),$scope.wordsLimit=null):($("#showMore").html(showMoreText),$scope.wordsLimit=100),summaryIsCollapsed=!summaryIsCollapsed},$scope.wordsLimit=100,$("#showMore").html(showMoreText),Event.find(credentials,actions)};module.controller("EventsDataViewController",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event","$sce"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,Comment){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,hasAddIcon:!0,showEventSubNav:!0,eventSubNav:"comments",AddIconState:"home.events.details.comments.add"}),$scope.showComments=!1,$scope.loading=!0;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.loading=!1,$scope.event=event,$scope.eventId=$stateParams.eventId,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Comments",hasAddIcon:Event.can("gather comments")});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},action={success:function(comments){$scope.showComments=!0,$.each(comments,function(comment){comment.tapped=!1}),$scope.comments=comments}};Comment.all(credentials,action)}};$scope.editComment=function(comment){$state.go("home.events.details.comments.edit",{commentId:comment.id,content:comment.content})},$scope.deleteComment=function(comment){var customCredentials={};angular.extend(customCredentials,credentials),customCredentials.id=comment.id,Comment.remove(customCredentials,{success:function(){var commentIndex=$scope.comments.indexOf(comment);$scope.comments.splice(commentIndex,1)}})},$scope.handleCommentTap=function(comment){comment.tapped=!comment.tapped;for(var i=0;i<$scope.comments.length;i++)$scope.comments[i]!==comment&&($scope.comments[i].tapped=!1)},Event.find(credentials,actions)};module.controller("EventsCommentsController",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","Comment"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event,Comment){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Comment",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,showEventSubNav:!1,eventSubNav:"expenses"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(){$scope.handleSaveButtonClick=function(){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(comment){$scope.comment=comment,$location.path("/home/events/"+$stateParams.eventId+"/comments")},error:function(comment_error){$scope.comment_error=comment_error,console.log(comment_error)}};Comment.create(credentials,actions,$scope.comment)}}};Event.find(credentials,actions)};module.controller("EventsCommentsAddController",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event","Comment"],angular.module("brandscopicApp.controllers").controller("EventsCommentsEditController",["$scope","$state","$stateParams","UserInterface","CompanyService","UserService","Comment",function($scope,$state,$stateParams,UserInterface,CompanyService,UserService,Comment){angular.extend(UserInterface,UserInterface.getDefaults(),{title:"Comment",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,showEventSubNav:!1,eventSubNav:"comments"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId};$scope.comment={id:$stateParams.commentId,content:$stateParams.content},$scope.handleSaveButtonClick=function(comment){var customCredentials={};angular.extend(customCredentials,credentials),customCredentials.id=comment.id,Comment.update(customCredentials,{comment:{content:comment.content}},{success:function(){$state.go("home.events.details.comments")}})}}]);var module=angular.module("brandscopicApp.controllers"),controller1=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasBackIcon:!0,eventSubNav:"tasks"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Tasks"}),$scope.eventId=$stateParams.eventId,$scope.eventTaskItems=[{id:1,assigned:"Chris Jaskot",Task:"Pickup t-shirts from storage unit",date:"2013-12-13",task_status:"Late"},{id:2,assigned:"George Tan",Task:"Confirm time and location of event",date:"2013-12-13",task_status:"Incomplete"},{id:3,assigned:"",Task:"Hire models for event",date:"2013-12-13",task_status:"Unassigned"},{id:4,assigned:"George Tan",Task:"Identify drink recipes for promotion",date:"2013-12-13",task_status:"Late"},{id:5,assigned:"Chris Jaskot",Task:"Order ballons for the event",date:"2013-12-13",task_status:"Late"},{id:6,assigned:"Chris Jaskot",Task:"Order ballons for the event",date:"2013-12-13",task_status:"Incomplete"},{id:7,assigned:"",Task:"Identify catering provider",date:"2013-12-13",task_status:"Unassigned"},{id:8,assigned:"Chris Jaskot",Task:"Select event presenter",date:"2013-12-13",task_status:"Incomplete"}],$scope.eventTaskFilters=[{label:"Late",id:"Late",name:"task_status",count:3,selected:!1},{label:"Unassigned",id:"Unassigned",name:"task_status",count:2,selected:!1},{label:"Assigned",id:"Assigned",name:"task_status",count:2,selected:!1},{label:"Incomplete",id:"Incomplete",name:"task_status",count:2,selected:!1},{label:"Complete",id:"Complete",name:"task_status",count:3,selected:!1}],$scope.task_status=!1,$scope.filterTask=function(status){$scope.task_status=$scope.task_status==status?!1:status}}};Event.find(credentials,actions)},controller2=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Task details",hasMenuIcon:!1,hasBackIcon:!0,eventSubNav:"tasks"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Tasks"}),$scope.eventId=$stateParams.eventId,$scope.taskId=$stateParams.taskId}};Event.find(credentials,actions)},controller3=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{title:"Edit task",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,eventSubNav:"tasks"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Tasks"}),$scope.eventId=$stateParams.eventId,$scope.taskId=$stateParams.taskId}};Event.find(credentials,actions)};module.controller("EventsTasksController",controller1).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event"],module.controller("EventsTasksDetailsController",controller2).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event"],module.controller("EventsTasksEditController",controller3).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,Expense){UserInterface.closeMenuIfLogged(),$scope.gotToState=function(newState){$state.go(newState)},$scope.showExpenses=!1,$scope.loading=!0,UserInterface.init($scope.UserInterface,{title:UserInterface.title,hasMenuIcon:!1,hasBackIcon:!0,hasAddIcon:!0,showEventSubNav:!0,eventSubNav:"expenses",AddIconState:"home.events.details.expenses.add"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.loading=!1,$scope.event=event,$scope.expenses={},$scope.eventId=$stateParams.eventId;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(expenses){for(var item,i=0;item=expenses[i++];)item.receipt?item.receipt.file_small||(item.receipt.file_small="assets/images/test.jpeg"):item.receipt={file_small:"assets/images/test.jpeg"};$scope.expenses=expenses,$scope.expenses.length&&($scope.showExpenses=!0),UserInterface.update($scope.UserInterface,{title:event.campaign?event.campaign.name:"Expenses"}),$scope.eventId=$stateParams.eventId,$scope.total=function(){for(var item,total=0,i=0;item=$scope.expenses[i++];)total+=Number(item.amount);return total}},error:function(){$scope.loading=!1}};Expense.all(credentials,actions)}};$scope.customPermissionsHandler=function(){UserInterface.update($scope.UserInterface,{hasAddIcon:UserService.permissionIsValid("events_create_expenses")})},Event.find(credentials,actions)};module.controller("EventsExpensesController",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","Expense"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,$location,snapRemote,UserService,CompanyService,UserInterface,Event,Expense){UserInterface.closeMenuIfLogged(),$scope.event_expense=$scope.event_expense||{},UserInterface.init($scope.UserInterface,{title:"Expense",hasMenuIcon:!1,hasDeleteIcon:!0,hasSaveIcon:!0,showEventSubNav:!1,eventSubNav:"expenses"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,$scope.createExpense=function(){var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(expense){$scope.event_expense=expense,$location.path("/home/events/"+event.id+"/expenses")},error:function(expense_error){$scope.expense_error=expense_error,console.log(expense_error)}};Expense.create(credentials,actions,$scope.event_expense)},$scope.triggerExpense=function(){$scope.image?window.uploadNow.trigger(document.querySelector("[ng-model=image]")):$scope.createExpense()}}};Event.find(credentials,actions),window.uploadNow.bind({auth_token:UserService.currentUser.auth_token,company_id:CompanyService.getCompanyId(),event_id:$stateParams.eventId,url:"http://stage.brandscopic.com/api/v1/events/"+$stateParams.eventId+"/photos/form.json?",noBind:!0}),$scope.$on("createPhoto",function(e,data){data.render||($scope.event_expense.receipt_attributes={direct_upload_url:data.direct_upload_url},$scope.createExpense())})};module.controller("EventsExpensesAddController",controller).$inject=["$scope","$state","$stateParams","$location","snapRemote","UserService","CompanyService","UserInterface","Event","Expense"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,$stateParams,snapRemote,UserService,CompanyService,UserInterface,Event,Expense){UserInterface.closeMenuIfLogged(),UserInterface.init($scope.UserInterface,{hasMenuIcon:!1,hasCloseIcon:!0,hasCustomHomeClass:!0,CloseState:"home.events.details.expenses",eventSubNav:"expenses"});var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(event){$scope.event=event,$scope.eventId=$stateParams.eventId,$scope.expenseId=$stateParams.expenseId;var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,event_id:$stateParams.eventId},actions={success:function(expenses){for(var item,i=0;item=expenses[i++];)item.id==$stateParams.expenseId&&(item.receipt?item.receipt.file_original||(item.receipt.file_original="assets/images/test.jpeg"):item.receipt={file_original:"assets/images/test.jpeg"},$scope.showExpenses=!0,$scope.expense=item)}};Expense.all(credentials,actions)
}};Event.find(credentials,actions)};module.controller("EventsExpensesPhotoController",controller).$inject=["$scope","$state","$stateParams","snapRemote","UserService","CompanyService","UserInterface","Event","Expense"];