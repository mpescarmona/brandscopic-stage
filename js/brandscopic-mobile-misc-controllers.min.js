var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,snapRemote,UserService,CompanyService,UserInterface,User,Company){if(!UserService.isLogged())return void $state.go("login");snapRemote.close(),$scope.currentCompany=CompanyService.currentCompany,$scope.companies={};var credentials={auth_token:UserService.currentUser.auth_token},action={success:function(companies){$scope.UserInterface=UserInterface;var ui={title:"Companies",hasMenuIcon:!0,hasDeleteIcon:!1,hasBackIcon:!1,hasMagnifierIcon:!1,hasAddIcon:!1,hasSaveIcon:!1,hasEditSurveyIcon:!1,hasCancelIcon:!1,hasCloseIcon:!1,hasCustomHomeClass:!1,searching:!1};angular.extend(UserInterface,ui),$scope.companies=companies}};Company.all(credentials,action),$scope.chooseCompany=function(companyId,companyName){var credentials={company_id:companyId,auth_token:UserService.currentUser.auth_token},actions={success:function(permissions){UserService.currentUser.permissions=permissions,CompanyService.currentCompany.id=companyId,CompanyService.currentCompany.name=companyName,$scope.$emit("CompanyChosen",companyId,companyName,permissions),$state.go("home.dashboard")}};User.permissions(credentials,actions)}};module.controller("CompaniesController",controller).$inject=["$scope","$state","snapRemote","UserService","CompanyService","UserInterface","User","Company"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,Notification,snapRemote,UserService,CompanyService,$state,UserInterface,allowedNotificationsFilter){function actionCreator(destinationState,parameters){return function(){destinationState&&$state.go(destinationState,parameters)}}snapRemote.close(),$scope.showNotifications=!1,$scope.loading=!0;var ui={title:"Notifications",hasMenuIcon:!0,hasMagnifierIcon:!1,hasAddIcon:!1,hasSaveIcon:!1,hasEditSurveyIcon:!1,hasCancelIcon:!1,hasCustomHomeClass:!1,searching:!1,hasBackIcon:!1};angular.extend(UserInterface,ui);var credentials={company_id:CompanyService.getCompanyId(),auth_token:UserService.currentUser.auth_token,"status[]":"Active"},actions={success:function(notifications){$scope.loading=!1;var viewModel=[];notifications=allowedNotificationsFilter(notifications);for(var i=0;i<notifications.length;i++){var notification=notifications[i],destinationState=null,parameters={};notification.event_id?(parameters={eventId:notification.event_id},destinationState="home.events.details.about"):"event_recaps_due"===notification.type?(parameters={filter:"due"},destinationState="home.events"):"event_recaps_late"===notification.type?(parameters={filter:"late"},destinationState="home.events"):"event_recaps_pending"===notification.type?(parameters={filter:"pending"},destinationState="home.events"):"event_recaps_rejected"===notification.type&&(parameters={filter:"rejected"},destinationState="home.events");var colorClass=Notification.getNotificationClass(notification);viewModel.push({message:notification.message,level:notification.level,type:-1!=notification.type.indexOf("task")?"tasks":-1!=notification.type.indexOf("event")?"event":"",action:actionCreator(destinationState,parameters),colorClass:colorClass})}$scope.showNotifications=!0,$scope.notifications=viewModel}};Notification.all(credentials,actions)};module.controller("NotificationsController",controller).$inject=["$scope","Notification","snapRemote","UserService","CompanyService","$state","UserInterface","allowedNotificationsFilter"];var module=angular.module("brandscopicApp.controllers"),controller=function($scope,$state,snapRemote,UserService,UserInterface){if(!UserService.isLogged())return void $state.go("login");snapRemote.close();var ui={title:"Tasks",hasMagnifierIcon:!1,hasAddIcon:!1,hasSaveIcon:!1,hasEditSurveyIcon:!1,hasCancelIcon:!1,hasCustomHomeClass:!1,searching:!1};angular.extend(UserInterface,ui),$scope.UserInterface=UserInterface};module.controller("TasksController",controller).$inject=["$scope","$state","snapRemote","UserService","UserInterface"];